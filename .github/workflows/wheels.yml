name: wheels

on:
  push:
    branches: [master, v3]
  pull_request:
    branches: [master, v3]
    types:
      # Opened, synchronize, and reopened are the default types
      # We add ready_for_review to additionally trigger when converting from draft to non-draft
      # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
      - opened
      - synchronize
      - reopened
      - ready_for_review
  release:
    types:
      - published

jobs:
  make_sdist:
    name: SDist
    if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.draft }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Make sdist
        run: |
          pipx run build --sdist

      - name: Install from sdist
        run: |
          pip install --upgrade pip setuptools wheel
          cp dist/h3-*.tar.gz h3.tar.gz
          pip install h3.tar.gz[all]

      - name: Test sdist
        run: pytest --cov=h3 --full-trace

      - name: Upload artifacts to GitHub
        uses: actions/upload-artifact@v3
        with:
          path: ./dist

  make_cibw_v1_wheels:
    name: "cibuildwheel v1: ${{ matrix.name }}"
    if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.draft }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Only build for platforms that cibw v2 doesn't support
        include:
          - os: macos-latest
            build: "cp27-macosx_x86_64"
            name: macOS Intel
          - os: ubuntu-latest
            build: "cp27-manylinux_x86_64"
            name: Linux Intel 64-bit

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      ## Build

      - uses: pypa/cibuildwheel@v1.12.0
        env:
          CIBW_TEST_REQUIRES: pytest numpy
          CIBW_TEST_COMMAND: pytest {project}/tests
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_BUILD: ${{ matrix.build }}

      - name: Check with Twine
        run: |
          pipx run twine check wheelhouse/*

      - name: Upload artifacts to GitHub
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  make_cibw_v2_wheels:
    name: "cibuildwheel v2: ${{ matrix.name }}"
    if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.draft }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            build: "cp*-macosx*"
            name: macOS
          - os: windows-latest
            build: "cp3*-win_amd64"
            name: Windows 64-bit
          - os: ubuntu-latest
            build: "cp*-manylinux_x86_64"
            name: Linux Intel glibc 64-bit
          - os: ubuntu-latest
            build: "cp*-musllinux_x86_64"
            name: Linux Intel musl 64-bit
          - os: ubuntu-latest
            build: "cp36-manylinux_aarch64"
            name: Linux Aarch64 3.6
          - os: ubuntu-latest
            build: "cp37-manylinux_aarch64"
            name: Linux Aarch64 3.7
          - os: ubuntu-latest
            build: "cp38-manylinux_aarch64"
            name: Linux Aarch64 3.8
          - os: ubuntu-latest
            build: "cp39-manylinux_aarch64"
            name: Linux Aarch64 3.9
          - os: ubuntu-latest
            build: "cp310-manylinux_aarch64"
            name: Linux Aarch64 3.10
          - os: ubuntu-latest
            build: "cp311-manylinux_aarch64"
            name: Linux Aarch64 3.11

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      ## Setup Env

      - uses: ilammy/msvc-dev-cmd@v1.12.0
        if: runner.os == 'Windows'

      - name: Set Windows variables
        if: runner.os == 'Windows'
        shell: bash
        run: |
          echo "CC=cl.exe" >> $GITHUB_ENV
          echo "CXX=cl.exe" >> $GITHUB_ENV

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2.1.0
        with:
          platforms: aarch64

      ## Build

      - uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_TEST_REQUIRES: pytest numpy
          CIBW_TEST_COMMAND: pytest {project}/tests
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_SKIP: ${{ matrix.skip }}

      - name: Check with Twine
        run: |
          pipx run twine check wheelhouse/*

      - name: Upload artifacts to GitHub
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  upload_all:
    needs: [make_sdist, make_cibw_v1_wheels, make_cibw_v2_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.1
        with:
          password: ${{ secrets.pypi_password }}
