name: wheels

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types:
      - published


jobs:
  make_sdist:
    name: SDist
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Make sdist
        run: |
          pipx run build --sdist

      - name: Upload artifacts to GitHub
        uses: actions/upload-artifact@v2
        with:
          path: ./dist


  make_wheels:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: macos-latest
          build: "cp*-macosx_x86_64"
          name: macOS Intel
        - os: windows-latest
          build: "cp3*-win_amd64"
          name: Windows 64-bit
        - os: ubuntu-latest
          build: "cp*-manylinux_x86_64"
          name: Linux Intel 64-bit
        - os: ubuntu-latest
          build: "cp36-manylinux_aarch64"
          name: Linux Aarch64 3.6
        - os: ubuntu-latest
          build: "cp37-manylinux_aarch64"
          name: Linux Aarch64 3.7
        - os: ubuntu-latest
          build: "cp38-manylinux_aarch64"
          name: Linux Aarch64 3.8
        - os: ubuntu-latest
          build: "cp39-manylinux_aarch64"
          name: Linux Aarch64 3.9

    steps:

      - uses: actions/checkout@v2
        with:
          submodules: recursive

      ## Setup Env

      - uses: ilammy/msvc-dev-cmd@v1.10.0
        if: runner.os == 'Windows'

      - name: Set Windows variables
        if: runner.os == 'Windows'
        shell: bash
        run: |
          echo "CC=cl.exe" >> $GITHUB_ENV
          echo "CXX=cl.exe" >> $GITHUB_ENV

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: aarch64

      ## Build

      - uses: pypa/cibuildwheel@v1.11.1
        env:
          CIBW_TEST_REQUIRES: pytest numpy
          CIBW_TEST_COMMAND: pytest {project}/tests
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_BUILD: ${{ matrix.build }}

      - name: Check with Twine
        run: |
          pipx run twine check wheelhouse/*

      - name: Upload artifacts to GitHub
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  upload_all:
    needs: [make_sdist, make_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          password: ${{ secrets.pypi_password }}


