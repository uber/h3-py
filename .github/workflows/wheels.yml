name: wheels

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:

env:
  CIBW_TEST_REQUIRES: pytest numpy
  CIBW_TEST_COMMAND: pytest {project}/tests
  CIBW_SKIP: pp* cp27*-win* *-win32 *-manylinux_i686

jobs:
  make_wheels:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:

      ## Setup Env

      - uses: actions/checkout@v2.3.3
        with:
          submodules: recursive

      - uses: ilammy/msvc-dev-cmd@v1.5.0
        if: startsWith(matrix.os, 'windows')

      - name: Set Windows variables
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          echo "CC=cl.exe" >> $GITHUB_ENV
          echo "CXX=cl.exe" >> $GITHUB_ENV
          
      ## Build

      - uses: pypa/cibuildwheel@v1.11.0

      - name: Make sdist
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          pipx run build --sdist --outdir=wheelhouse


      ## Upload

      - name: Check with Twine
        run: |
          pipx run twine check wheelhouse/*

      - name: Upload artifacts to GitHub
        if: github.event_name == 'release'
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse

      - name: Release to PyPI
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
        run: |
          pipx run twine upload wheelhouse/*
